import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class CSVAnalyzer {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Ingrese la ruta del archivo CSV: ");
        String fileName = scanner.nextLine();

        List<String[]> data = readCSV(fileName);
        if (data.isEmpty()) {
            System.out.println("Error al leer el archivo CSV");
            return;
        }

        System.out.println("Columnas disponibles:");
        String[] headers = data.get(0);
        for (int i = 0; i < headers.length; i++) {
            System.out.println(i + ": " + headers[i]);
        }

        System.out.print("Seleccione el índice de la columna para analizar: ");
        int columnIndex = scanner.nextInt();

        if (columnIndex < 0 || columnIndex >= headers.length) {
            System.out.println("Índice de columna inválido.");
            return;
        }

        List<Double> columnData = new ArrayList<>();
        for (int i = 1; i < data.size(); i++) {
            try {
                columnData.add(Double.parseDouble(data.get(i)[columnIndex]));
            } catch (NumberFormatException e) {
                System.out.println("No se encontró un valor númerico en el renglón" + (i + 1) + ", omitiendo.");
            }
        }

        if (columnData.isEmpty()) {
            System.out.println("No se encontró un valor númerico en la columna seleccionada.");
            return;
        }

        double min = columnData.stream().min(Double::compare).orElse(Double.MIN_VALUE);
        double max = columnData.stream().max(Double::compare).orElse(Double.MAX_VALUE);
        double range = max - min;

        System.out.println("Valor máximo: " + max);
        System.out.println("Valor mínimo: " + min);
        System.out.println("Rango de valores: " + range);

        System.out.print("Ingrese el número de intervalos: ");
        int numIntervals = scanner.nextInt();
        double intervalLength = range / numIntervals;

        System.out.println("Intervalos:");
        double start = min;
        double end;
        List<int[]> intervals = new ArrayList<>();
        for (int i = 0; i < numIntervals; i++) {
            end = start + intervalLength;
            System.out.println("Intervalo " + (i + 1) + ": [" + start + ", " + end + ")");
            intervals.add(new int[]{(int) start, (int) end});
            start = end;
        }

        System.out.println("Frecuencia en cada intervalo:");
        int[] frequencies = new int[numIntervals];
        for (double value : columnData) {
            int intervalIndex = (int) ((value - min) / intervalLength);
            if (intervalIndex == numIntervals) {
                intervalIndex--; // Ajuste para el valor máximo
            }
            frequencies[intervalIndex]++;
        }

        for (int i = 0; i < numIntervals; i++) {
            System.out.println("Intervalo " + (i + 1) + ": " + frequencies[i] + " valores");
        }

        int mayor = frequencies[0];
        int indicemax=0;
        for (int i=1;i<frequencies.length;i++){
            if (frequencies[i]>mayor){
                mayor= frequencies[i];
                indicemax=i;
            }
        }
            System.out.println("El intervalo "+(indicemax+1)+" tiene la frecuencia mas grande");
        

    }

    private static List<String[]> readCSV(String fileName) {
        List<String[]> data = new ArrayList<>();
        try (BufferedReader br = new BufferedReader(new FileReader(fileName))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] values = line.split(",");
                data.add(values);
            }
        } catch (IOException e) {
            System.out.println("Error al leer el archivo CSV: " + e.getMessage());
        }
        return data;
    }
}


